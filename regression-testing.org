This is the bulk of the stuff that makes regression testing possible.  I have several functions that tests my test files.  First I correct any mistakes on the "before" line.  Then if that section matches the after line, we're good.

I might be able to alter this program with ~(find-file-no-select FILE)~ and ~(with-current-buffer BUFFER BODY)~.  The returns the buffer from FILE, and the second 

* Functions for "before" and "after" sections.
** Go to the before and after sections.
#+BEGIN_SRC emacs-lisp
  (defun reg-test/go-to-before (reg-test/buffer)
    "go to the before line."
    (interactive)
    (find-file-noselect (concat "~/programming/emacs/autocorrect/tests/" reg-test/buffer))
    (with-current-buffer reg-test/buffer
      (beginning-of-buffer)
      (search-forward "* before")
      (next-line)
      (beginning-of-line)
      (forward-char 3)
      (let (reg-test/point)
        (setq reg-test/point
              (point))
        (kill-buffer reg-test/buffer)
        reg-test/point)))

  (defun reg-test/go-to-after (reg-test/buffer)
    "go to the before line."
    (interactive)
    (find-file-noselect (concat "~/programming/emacs/autocorrect/tests/" reg-test/buffer))
    (with-current-buffer reg-test/buffer
      (beginning-of-buffer)
      (search-forward "* after")
      (next-line)
      (beginning-of-line)
      (forward-char 3)
      (point)))

#+END_SRC

This should take point to the "before" heading.
(reg-test/go-to-before "words-are-correct.org")

This should take point to the "after" heading.
(reg-test/go-to-after "words-are-correct.org")

** Get the before and after line number positions.
#+BEGIN_SRC emacs-lisp
  (defun reg-test/get-before-line-number (reg-test/buffer)
    "This returns the line number at the before heading."
    (reg-test/go-to-before reg-test/buffer)
    (line-number-at-pos))

  (defun reg-test/get-after-line-number (reg-test/buffer)
    "This returns the line number at the before heading."
    (reg-test/go-to-after reg-test/buffer)
    (line-number-at-pos))
#+END_SRC

This should get the before line number.

(reg-test/get-before-line-number "words-are-correct.org")
** return the before and after text.

#+BEGIN_SRC emacs-lisp

  (require 'ert)
  (defun reg-test/get-before (reg-test/buffer)
    "This returns the before text."
    (interactive)
    ;;(reg-test/go-to-before reg-test/buffer)

    (find-file-noselect (concat "~/programming/emacs/autocorrect/tests/" reg-test/buffer))
    (with-current-buffer reg-test/buffer
      (beginning-of-buffer)
      (search-forward "* before")
      (next-line)
      (beginning-of-line)
      (forward-char 3)
      (let (string-before)
        (setq string-before (buffer-substring (point) (progn
                                                        (search-forward-regexp "$")
                                                        (point))))
        string-before)))

  (defun reg-test/get-after (reg-test/buffer)
    "This returns the before text."
    (interactive)
    (reg-test/go-to-after reg-test/buffer)
    (let (string-after)
      (setq string-after
            (buffer-substring (point) (progn
                                        (search-forward-regexp "$")
                                        (point))))
      string-after))

#+END_SRC

This should get me the before string.
(reg-test/get-before "words-are-correct.org")

This should get me the after string.
(reg-test/get-after "words-are-correct.org")

* COMMENT Does the buffer already exist
#+BEGIN_SRC emacs-lisp
  (defun reg-test/does-buffer-exist-p (reg-test/buffer)
  "Returns t if the buffer already exists"
  (interactive)
  )


#+END_SRC

* Correct words on current line

#+BEGIN_SRC emacs-lisp
  (defun reg-test/correct-all-words-on-current-line (line reg-test/buffer)
    "This function will move to each word on the line, and press the space bar, which will call my/flyspell-auto-correct-word."
    (interactive)
    (forward-word)
    ;; I am now at the end of a word
    (when (equal line (line-number-at-pos))
      (insert " ")
      (my/flyspell-auto-correct-word)
      (reg-test/correct-all-words-on-current-line line reg-test/buffer)))
  #+END_SRC

  This should "correct" all the correct words on the before line of the "words-are-correct.org" file.
  (reg-test/correct-all-words-on-current-line
  (reg-test/get-before-line-number "words-are-correct.org")
      "words-are-correct.org")

* Run the tests
  #+BEGIN_SRC emacs-lisp
    (defun reg-test/autocorrect-words-are-correct (reg-test/buffer)
      "This function runs the test specifies in ./tests/words-are-correct.org"
      (interactive)
      (reg-test/correct-all-words-on-current-line
            (reg-test/get-before-line-number reg-test/buffer)
            reg-test/buffer))


       #+END_SRC
       This should run the run corrections on all words in the before line.

       (reg-test/autocorrect-words-are-correct "words-are-correct.org")


       #+BEGIN_SRC emacs-lisp
         (ert-deftest autocorrect-words-are-correct ()
           (let (reg-test/buffer)
             (setq reg-test/buffer "words-are-correct.org")
             (reg-test/autocorrect-words-are-correct reg-test/buffer)
             (should (let (stringEqual)
                       (setq stringEqual
                             (string= (reg-test/get-before reg-test/buffer) (reg-test/get-after reg-test/buffer)))
                       (kill-buffer reg-test/buffer)
                       stringEqual)))
           )


         (defun thisShouldReturnT ()
           ""
           (interactive)
           (let (reg-test/buffer)
             (setq reg-test/buffer "words-are-correct.org")
             (reg-test/autocorrect-words-are-correct reg-test/buffer)
             (let (stringEqual)
               (setq stringEqual
                     (string= (reg-test/get-before reg-test/buffer) (reg-test/get-after reg-test/buffer)))
               (kill-buffer reg-test/buffer)
               stringEqual))) 

               (thisShouldReturnT)


#+END_SRC

             (reg-test/autocorrect-words-are-correct "words-are-correct.org")
               (setq stringEqual
                     (string= (reg-test/get-before "words-are-correct.org") (reg-test/get-after "words-are-correct.org")))
